// AUTO GENERATED BY gen2.clj!

package com.phronemophobic.cljcef;

import com.phronemophobic.cljcef.*;

import com.sun.jna.Structure;

import com.sun.jna.Callback;

import com.sun.jna.Pointer;

import java.util.List;

import java.util.Arrays;

public class CefTaskRunner extends Structure{
public CefTaskRunner(){
base.size.setValue(this.size());

ReferenceCountImpl.track(this.getPointer());

}

public static interface IsSameFunc extends Callback {

int is_same(CefTaskRunner x0, CefTaskRunner x1); 
}

public static interface BelongsToCurrentThreadFunc extends Callback {

int belongs_to_current_thread(CefTaskRunner x0); 
}

public static interface BelongsToThreadFunc extends Callback {

int belongs_to_thread(CefTaskRunner x0, int x1); 
}

public static interface PostTaskFunc extends Callback {

int post_task(CefTaskRunner x0, CefTask x1); 
}

public static interface PostDelayedTaskFunc extends Callback {

int post_delayed_task(CefTaskRunner x0, CefTask x1, long x2); 
}

public CefBaseRefCounted base;

public IsSameFunc is_same;

public BelongsToCurrentThreadFunc belongs_to_current_thread;

public BelongsToThreadFunc belongs_to_thread;

public PostTaskFunc post_task;

public PostDelayedTaskFunc post_delayed_task;

protected List getFieldOrder() {
                                            return Arrays.asList("base", "is_same", "belongs_to_current_thread", "belongs_to_thread", "post_task", "post_delayed_task");
 }

public int isSame (CefTaskRunner x1) {

return  this.is_same.is_same(this,  x1);

}

public int belongsToCurrentThread () {

return  this.belongs_to_current_thread.belongs_to_current_thread(this);

}

public int belongsToThread (int x1) {

return  this.belongs_to_thread.belongs_to_thread(this,  x1);

}

public int postTask (CefTask x1) {

return  this.post_task.post_task(this,  x1);

}

public int postDelayedTask (CefTask x1, long x2) {

return  this.post_delayed_task.post_delayed_task(this,  x1,  x2);

}}