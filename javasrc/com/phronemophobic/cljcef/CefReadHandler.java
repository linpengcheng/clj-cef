// AUTO GENERATED BY gen2.clj!

package com.phronemophobic.cljcef;

import com.phronemophobic.cljcef.*;

import com.sun.jna.Structure;

import com.sun.jna.Callback;

import com.sun.jna.Pointer;

import java.util.List;

import java.util.Arrays;

public class CefReadHandler extends Structure{
public CefReadHandler(){
base.size.setValue(this.size());

ReferenceCountImpl.track(this.getPointer());

}

public static interface ReadFunc extends Callback {

SizeT read(CefReadHandler x0, Pointer x1, SizeT x2, SizeT x3); 
}

public static interface SeekFunc extends Callback {

int seek(CefReadHandler x0, long x1, int x2); 
}

public static interface TellFunc extends Callback {

long tell(CefReadHandler x0); 
}

public static interface EofFunc extends Callback {

int eof(CefReadHandler x0); 
}

public static interface MayBlockFunc extends Callback {

int may_block(CefReadHandler x0); 
}

public CefBaseRefCounted base;

public ReadFunc read;

public SeekFunc seek;

public TellFunc tell;

public EofFunc eof;

public MayBlockFunc may_block;

protected List getFieldOrder() {
                                            return Arrays.asList("base", "read", "seek", "tell", "eof", "may_block");
 }

public SizeT read (Pointer x1, SizeT x2, SizeT x3) {

return  this.read.read(this,  x1,  x2,  x3);

}

public int seek (long x1, int x2) {

return  this.seek.seek(this,  x1,  x2);

}

public long tell () {

return  this.tell.tell(this);

}

public int eof () {

return  this.eof.eof(this);

}

public int mayBlock () {

return  this.may_block.may_block(this);

}}