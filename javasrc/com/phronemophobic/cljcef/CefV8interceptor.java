// AUTO GENERATED BY gen2.clj!

package com.phronemophobic.cljcef;

import com.phronemophobic.cljcef.*;

import com.sun.jna.Structure;

import com.sun.jna.Callback;

import com.sun.jna.Pointer;

import java.util.List;

import java.util.Arrays;

public class CefV8interceptor extends Structure{
public CefV8interceptor(){
base.size.setValue(this.size());

ReferenceCountImpl.track(this.getPointer());

}

public static interface GetBynameFunc extends Callback {

int get_byname(CefV8interceptor x0, CefStringUtf16 x1, CefV8value x2, Pointer x3, CefStringUtf16 x4); 
}

public static interface GetByindexFunc extends Callback {

int get_byindex(CefV8interceptor x0, int x1, CefV8value x2, Pointer x3, CefStringUtf16 x4); 
}

public static interface SetBynameFunc extends Callback {

int set_byname(CefV8interceptor x0, CefStringUtf16 x1, CefV8value x2, CefV8value x3, CefStringUtf16 x4); 
}

public static interface SetByindexFunc extends Callback {

int set_byindex(CefV8interceptor x0, int x1, CefV8value x2, CefV8value x3, CefStringUtf16 x4); 
}

public CefBaseRefCounted base;

public GetBynameFunc get_byname;

public GetByindexFunc get_byindex;

public SetBynameFunc set_byname;

public SetByindexFunc set_byindex;

protected List getFieldOrder() {
                                            return Arrays.asList("base", "get_byname", "get_byindex", "set_byname", "set_byindex");
 }

public int getByname (String x1, CefV8value x2, Pointer x3, String x4) {

return  this.get_byname.get_byname(this, CljCefLib.toCefString(x1),  x2,  x3, CljCefLib.toCefString(x4));

}

public int getByindex (int x1, CefV8value x2, Pointer x3, String x4) {

return  this.get_byindex.get_byindex(this,  x1,  x2,  x3, CljCefLib.toCefString(x4));

}

public int setByname (String x1, CefV8value x2, CefV8value x3, String x4) {

return  this.set_byname.set_byname(this, CljCefLib.toCefString(x1),  x2,  x3, CljCefLib.toCefString(x4));

}

public int setByindex (int x1, CefV8value x2, CefV8value x3, String x4) {

return  this.set_byindex.set_byindex(this,  x1,  x2,  x3, CljCefLib.toCefString(x4));

}}